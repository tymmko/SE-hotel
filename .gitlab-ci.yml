stages:
  - install
  - build
  - deploy

default:
  image: node:20

variables:
  NODE_ENV: production

# Install backend dependencies
install_backend:
  stage: install
  script:
    - cd application/backend
    - npm install --legacy-peer-deps
  artifacts:
    paths:
      - application/backend/node_modules/

# Install frontend dependencies
install_frontend:
  stage: install
  script:
    - cd application/frontend
    - npm install --legacy-peer-deps
  artifacts:
    paths:
      - application/frontend/node_modules/

# Build frontend
build_frontend:
  stage: build
  script:
    - cd application/frontend
    - npm install --legacy-peer-deps --include=dev
    - npm run build
  artifacts:
    paths:
      - application/frontend/dist

# Deploy frontend
deploy_frontend:
  stage: deploy
  image: ghcr.io/railwayapp/cli:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  script:
    - cd application/frontend
    - echo $RAILWAY_TOKEN | railway login --browserless --token-stdin
    - railway link --project=$PROJECT_ID
    - railway up --service=$FRONTEND_SVC_ID
  variables:
    RAILWAY_TOKEN: $RAILWAY_TOKEN
    PROJECT_ID: $RAILWAY_PROJECT_ID
    FRONTEND_SVC_ID: $RAILWAY_FRONTEND_SVC_ID

# Deploy backend
deploy_backend:
  stage: deploy
  image: ghcr.io/railwayapp/cli:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  script:
    - cd application/backend
    - echo $RAILWAY_TOKEN | railway login --browserless --token-stdin
    - railway link --project=$PROJECT_ID
    - railway up --service=$BACKEND_SVC_ID
  variables:
    RAILWAY_TOKEN: $RAILWAY_TOKEN
    PROJECT_ID: $RAILWAY_PROJECT_ID
    BACKEND_SVC_ID: $RAILWAY_BACKEND_SVC_ID

